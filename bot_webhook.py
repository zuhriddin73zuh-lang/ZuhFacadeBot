import os
import logging
from flask import Flask, request
import telebot
from telebot import types

# üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# üîπ –ö–æ–Ω—Ñ–∏–≥ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
TOKEN = os.environ.get("TELEGRAM_TOKEN")
GROUP_ID = int(os.environ.get("GROUP_ID"))
PORT = int(os.environ.get("PORT", 5000))

logger.info(f"‚úÖ Bot starting with GROUP_ID={GROUP_ID}")

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# üîπ –í–æ–ø—Ä–æ—Å—ã
QUESTIONS = {
    "ru": [
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
        "–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:",
        "–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        "–ü—Ä–∏–º–µ—Ä–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç—É—Ä–∞ (–º¬≤):",
        "–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ —Ñ–æ—Ç–æ –¥–æ–º–∞:"
    ],
    "uz": [
        "Assalomu alaykum! Iltimos, ismingizni kiriting:",
        "Obyekt manzilini yozing:",
        "Telefon raqamingiz:",
        "Taxminiy maydon (m¬≤):",
        "Izoh yoki uy rasmini yuboring:"
    ]
}

THANK_YOU = {
    "ru": "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    "uz": "‚úÖ Rahmat! So'rovingiz qabul qilindi. Tez orada siz bilan bog'lanamiz."
}

# üîπ –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —à–∞–≥–æ–≤
user_data = {}

# --- Handlers ---

@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    logger.info(f"Start from {chat_id} text={message.text} lang={message.from_user.language_code}")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("RU", "UZ")
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", reply_markup=markup)


@bot.message_handler(func=lambda m: m.text in ["RU", "UZ"])
def choose_language(message):
    chat_id = message.chat.id
    lang = "ru" if message.text == "RU" else "uz"
    user_data[chat_id] = {"lang": lang, "step": 0, "answers": []}
    bot.send_message(chat_id, QUESTIONS[lang][0], reply_markup=types.ReplyKeyboardRemove())


@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    chat_id = message.chat.id
    if chat_id not in user_data:
        bot.send_message(chat_id, "–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞")
        return

    user = user_data[chat_id]
    lang = user["lang"]

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    user["answers"].append(message.text)
    user["step"] += 1

    # –µ—Å–ª–∏ –µ—â—ë –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã
    if user["step"] < len(QUESTIONS[lang]):
        bot.send_message(chat_id, QUESTIONS[lang][user["step"]])
    else:
        try:
            name, address, phone, square, comment = user["answers"]

            if lang == "ru":
                text = (
                    f"üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n\n"
                    f"üë§ –ò–º—è: {name}\n"
                    f"üè† –ê–¥—Ä–µ—Å: {address}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
                    f"üìê –ö–≤–∞–¥—Ä–∞—Ç—É—Ä–∞: {square}\n"
                    f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
                )
            else:
                text = (
                    f"üìã Yangi ariza\n\n"
                    f"üë§ Ism: {name}\n"
                    f"üè† Manzil: {address}\n"
                    f"üìû Telefon: {phone}\n"
                    f"üìê Maydon: {square}\n"
                    f"üí¨ Izoh: {comment}"
                )

            bot.send_message(GROUP_ID, text)  # –≤ –≥—Ä—É–ø–ø—É
            bot.send_message(chat_id, THANK_YOU[lang])  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            del user_data[chat_id]  # –æ—á–∏—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥
        except Exception as e:
            logger.error(f"Error sending to group: {e}")
            bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.")


# --- Flask routes ---

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        json_data = request.get_json()
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return 'OK'
    except Exception as e:
        logger.error(f"Webhook error: {e}")
        return 'Error', 500


@app.route('/')
def home():
    return '‚úÖ Bot is running!'


if __name__ == '__main__':
    app.run(host="0.0.0.0", port=PORT)








