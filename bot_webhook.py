# –í—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
import os
print("–¢–û–ö–ï–ù –ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:", os.getenv('TELEGRAM_TOKEN')) import logging
import telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN')
GROUP_ID = int(os.getenv('GROUP_ID', '-1094323262'))

logger.info("‚úÖ Bot starting...")
logger.info(f"Token: {TOKEN}")
logger.info(f"Group ID: {GROUP_ID}")

bot = telebot.TeleBot(TOKEN)

# –í–æ–ø—Ä–æ—Å—ã –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö
QUESTIONS = {
    "ru": [
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
        "–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:",
        "–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        "–ü—Ä–∏–º–µ—Ä–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç—É—Ä–∞ (–º¬≤):",
        "–û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ —Ñ–æ—Ç–æ –¥–æ–º–∞:"
    ],
    "uz": [
        "Assalomu alaykum! Iltimos, ismingizni kiriting:",
        "Obekt manzilini yozing:",
        "Telefon raqamingiz:",
        "Taxminiy maydon (m¬≤):",
        "Izoh yoki uy rasmini yuboring:"
    ]
}

THANK_YOU = {
    "ru": "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    "uz": "‚úÖ Rahmat! So'rovingiz qabul qilindi. Tez orada siz bilan bog'lanamiz."
}

user_data = {}

@bot.message_handler(commands=['start'])
def handle_start(message):
    try:
        logger.info(f"üì® Received: {message.text}")
        chat_id = message.chat.id
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
        if 'uz' in message.text:
            lang = 'uz'
        else:
            lang = 'ru'
            
        logger.info(f"üåê Language: {lang} for chat {chat_id}")
        
        user_data[chat_id] = {'lang': lang, 'step': 0, 'answers': []}
        bot.send_message(chat_id, QUESTIONS[lang][0])
        logger.info(f"‚úÖ First question sent to {chat_id}")
        
    except Exception as e:
        logger.error(f"‚ùå Error: {e}")

@bot.message_handler(content_types=['text', 'photo'])
def handle_message(message):
    try:
        chat_id = message.chat.id
        
        if chat_id not in user_data:
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å /start")
            return
        
        user = user_data[chat_id]
        lang = user['lang']
        step = user['step']
        
        if step < 4:
            if message.content_type != 'text':
                bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–º" if lang == 'ru' else "Iltimos, matn bilan javob bering")
                return
            
            user['answers'].append(message.text)
            user['step'] += 1
            
            if user['step'] < 5:
                bot.send_message(chat_id, QUESTIONS[lang][user['step']])
            else:
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞—è–≤–∫—É
                send_application(user['answers'], lang, chat_id)
                bot.send_message(chat_id, THANK_YOU[lang])
                del user_data[chat_id]
                
        else:
            if message.content_type == 'photo':
                user['answers'].append("–§–æ—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–æ" if lang == 'ru' else "Rasm qo'shildi")
            else:
                user['answers'].append(message.text)
            
            send_application(user['answers'], lang, chat_id)
            bot.send_message(chat_id, THANK_YOU[lang])
            del user_data[chat_id]
            
    except Exception as e:
        logger.error(f"‚ùå Error: {e}")

def send_application(answers, lang, chat_id):
    try:
        name, address, phone, square, comment = answers
        
        if lang == 'ru':
            text = f"üìã –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n\nüë§ –ò–º—è: {name}\nüè† –ê–¥—Ä–µ—Å: {address}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüìê –ö–≤–∞–¥—Ä–∞—Ç—É—Ä–∞: {square}\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
        else:
            text = f"üìã Yangi ariza\n\nüë§ Ism: {name}\nüè† Manzil: {address}\nüìû Telefon: {phone}\nüìê Maydon: {square}\nüí¨ Izoh: {comment}"
        
        bot.send_message(GROUP_ID, text)
        
    except Exception as e:
        logger.error(f"‚ùå Error sending application: {e}")

logger.info("üöÄ Starting bot in polling mode...")
bot.polling(none_stop=True)

