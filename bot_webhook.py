

# -*- coding: utf-8 -*-
import os
import json
import telebot
from flask import Flask, request

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.getenv("BOT_TOKEN", "7592969962:AAE93nt3NRENC9LCxfomvONl7zqozS2SZh8")
GROUP_CHAT_ID = os.getenv("GROUP_CHAT_ID", "-4878488268")  # –≥—Ä—É–ø–ø–∞ –¥–ª—è –∑–∞—è–≤–æ–∫
WEBHOOK_URL = os.getenv("WEBHOOK_URL", "https://zuhfacadebot-1.onrender.com/webhook")

bot = telebot.TeleBot(BOT_TOKEN, threaded=False)
app = Flask(__name__)

STATE = {}
DATA_FILE = "applications.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
if os.path.exists(DATA_FILE):
    try:
        with open(DATA_FILE, "r", encoding="utf-8") as f:
            STATE = json.load(f)
    except:
        STATE = {}

# –¢–µ–∫—Å—Ç—ã –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö
TEXTS = {
    "ru": {
        "ask_name": "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è:",
        "ask_phone": "üìû –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        "ask_address": "üìç –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:",
        "ask_area": "üìê –£–∫–∞–∂–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç—É—Ä—É –æ–±—ä–µ–∫—Ç–∞:",
        "ask_comment": "üí¨ –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–∏–¥ —Ñ–∞—Å–∞–¥–Ω—ã—Ö —Ä–∞–±–æ—Ç):",
        "done": "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!",
    },
    "uz": {
        "ask_name": "üëã Assalomu alaykum! Iltimos, ismingizni kiriting:",
        "ask_phone": "üìû Telefon raqamingizni kiriting:",
        "ask_address": "üìç Ob‚Äôekt manzilini kiriting:",
        "ask_area": "üìê Ob‚Äôekt kvadraturasini kiriting:",
        "ask_comment": "üí¨ Izoh qoldiring (masalan, fasad ishlari turi):",
        "done": "‚úÖ Rahmat! So‚Äòrovingiz qabul qilindi. Tez orada siz bilan bog‚Äòlanamiz!",
    }
}

QUESTIONS = ["name", "phone", "address", "area", "comment"]

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –≤ —Ñ–∞–π–ª
def save_state():
    with open(DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(STATE, f, ensure_ascii=False, indent=2)

# === –•—ç–Ω–¥–ª–µ—Ä—ã ===
@bot.message_handler(commands=['start'])
def handle_start(message):
    lang = "ru"
    if message.text.startswith("/start uz"):
        lang = "uz"

    STATE[str(message.chat.id)] = {"step": "name", "lang": lang, "data": {}}
    save_state()
    bot.send_message(message.chat.id, TEXTS[lang]["ask_name"])

@bot.message_handler(func=lambda m: True)
def handle_all(message):
    user_id = str(message.chat.id)

    if user_id not in STATE:
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞.")
        return

    step = STATE[user_id]["step"]
    lang = STATE[user_id]["lang"]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    STATE[user_id]["data"][step] = message.text

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    current_index = QUESTIONS.index(step)
    if current_index + 1 < len(QUESTIONS):
        next_step = QUESTIONS[current_index + 1]
        STATE[user_id]["step"] = next_step
        save_state()
        bot.send_message(message.chat.id, TEXTS[lang][f"ask_{next_step}"])
    else:
        # –í—Å–µ –æ—Ç–≤–µ—Ç—ã —Å–æ–±—Ä–∞–Ω—ã
        data = STATE[user_id]["data"]
        text = (
            f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n"
            f"üë§ –ò–º—è: {data.get('name')}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}\n"
            f"üìç –ê–¥—Ä–µ—Å: {data.get('address')}\n"
            f"üìê –ö–≤–∞–¥—Ä–∞—Ç—É—Ä–∞: {data.get('area')}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data.get('comment')}"
        )
        bot.send_message(GROUP_CHAT_ID, text)
        bot.send_message(message.chat.id, TEXTS[lang]["done"])
        del STATE[user_id]
        save_state()

# === Flask routes ===
@app.route('/', methods=['GET'])
def index():
    return "Bot is running!", 200

@app.route('/webhook', methods=['POST'])
def webhook():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
with app.app_context():
    bot.remove_webhook()
    bot.set_webhook(url=WEBHOOK_URL)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))









